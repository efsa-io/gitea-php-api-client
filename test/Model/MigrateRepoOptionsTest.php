<?php
/**
 * MigrateRepoOptionsTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  \Efsa\Client\Gitea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Gitea API.
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.17.0+dev-334-gf36701c70
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace \Efsa\Client\Gitea\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * MigrateRepoOptionsTest Class Doc Comment
 *
 * @category    Class
 * @description MigrateRepoOptions options for migrating repository&#39;s this is used to interact with api v1
 * @package     \Efsa\Client\Gitea
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class MigrateRepoOptionsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "MigrateRepoOptions"
     */
    public function testMigrateRepoOptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "auth_password"
     */
    public function testPropertyAuthPassword()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "auth_token"
     */
    public function testPropertyAuthToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "auth_username"
     */
    public function testPropertyAuthUsername()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "clone_addr"
     */
    public function testPropertyCloneAddr()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issues"
     */
    public function testPropertyIssues()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "labels"
     */
    public function testPropertyLabels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lfs"
     */
    public function testPropertyLfs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lfs_endpoint"
     */
    public function testPropertyLfsEndpoint()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "milestones"
     */
    public function testPropertyMilestones()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mirror"
     */
    public function testPropertyMirror()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mirror_interval"
     */
    public function testPropertyMirrorInterval()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "private"
     */
    public function testPropertyPrivate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pull_requests"
     */
    public function testPropertyPullRequests()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "releases"
     */
    public function testPropertyReleases()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "repo_name"
     */
    public function testPropertyRepoName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "repo_owner"
     */
    public function testPropertyRepoOwner()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "service"
     */
    public function testPropertyService()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uid"
     */
    public function testPropertyUid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "wiki"
     */
    public function testPropertyWiki()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
