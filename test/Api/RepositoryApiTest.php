<?php
/**
 * RepositoryApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  \Efsa\Client\Gitea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Gitea API.
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.17.0+dev-334-gf36701c70
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace \Efsa\Client\Gitea\Test\Api;

use \\Efsa\Client\Gitea\Configuration;
use \\Efsa\Client\Gitea\ApiException;
use \\Efsa\Client\Gitea\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * RepositoryApiTest Class Doc Comment
 *
 * @category Class
 * @package  \Efsa\Client\Gitea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class RepositoryApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for acceptRepoTransfer
     *
     * Accept a repo transfer.
     *
     */
    public function testAcceptRepoTransfer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createCurrentUserRepo
     *
     * Create a repository.
     *
     */
    public function testCreateCurrentUserRepo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createFork
     *
     * Fork a repository.
     *
     */
    public function testCreateFork()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateRepo
     *
     * Create a repository using a template.
     *
     */
    public function testGenerateRepo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAnnotatedTag
     *
     * Gets the tag object of an annotated tag (not lightweight tags).
     *
     */
    public function testGetAnnotatedTag()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBlob
     *
     * Gets the blob of a repository..
     *
     */
    public function testGetBlob()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTree
     *
     * Gets the tree of a repository..
     *
     */
    public function testGetTree()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listForks
     *
     * List a repository's forks.
     *
     */
    public function testListForks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rejectRepoTransfer
     *
     * Reject a repo transfer.
     *
     */
    public function testRejectRepoTransfer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoAddCollaborator
     *
     * Add a collaborator to a repository.
     *
     */
    public function testRepoAddCollaborator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoAddTeam
     *
     * Add a team to a repository.
     *
     */
    public function testRepoAddTeam()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoAddTopic
     *
     * Add a topic to a repository.
     *
     */
    public function testRepoAddTopic()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoApplyDiffPatch
     *
     * Apply diff patch to repository.
     *
     */
    public function testRepoApplyDiffPatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoCheckCollaborator
     *
     * Check if a user is a collaborator of a repository.
     *
     */
    public function testRepoCheckCollaborator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoCheckTeam
     *
     * Check if a team is assigned to a repository.
     *
     */
    public function testRepoCheckTeam()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoCreateBranch
     *
     * Create a branch.
     *
     */
    public function testRepoCreateBranch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoCreateBranchProtection
     *
     * Create a branch protections for a repository.
     *
     */
    public function testRepoCreateBranchProtection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoCreateFile
     *
     * Create a file in a repository.
     *
     */
    public function testRepoCreateFile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoCreateHook
     *
     * Create a hook.
     *
     */
    public function testRepoCreateHook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoCreateKey
     *
     * Add a key to a repository.
     *
     */
    public function testRepoCreateKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoCreatePullRequest
     *
     * Create a pull request.
     *
     */
    public function testRepoCreatePullRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoCreatePullReview
     *
     * Create a review to an pull request.
     *
     */
    public function testRepoCreatePullReview()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoCreatePullReviewRequests
     *
     * create review requests for a pull request.
     *
     */
    public function testRepoCreatePullReviewRequests()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoCreateRelease
     *
     * Create a release.
     *
     */
    public function testRepoCreateRelease()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoCreateReleaseAttachment
     *
     * Create a release attachment.
     *
     */
    public function testRepoCreateReleaseAttachment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoCreateStatus
     *
     * Create a commit status.
     *
     */
    public function testRepoCreateStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoCreateTag
     *
     * Create a new git tag in a repository.
     *
     */
    public function testRepoCreateTag()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoCreateWikiPage
     *
     * Create a wiki page.
     *
     */
    public function testRepoCreateWikiPage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDelete
     *
     * Delete a repository.
     *
     */
    public function testRepoDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeleteBranch
     *
     * Delete a specific branch from a repository.
     *
     */
    public function testRepoDeleteBranch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeleteBranchProtection
     *
     * Delete a specific branch protection for the repository.
     *
     */
    public function testRepoDeleteBranchProtection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeleteCollaborator
     *
     * Delete a collaborator from a repository.
     *
     */
    public function testRepoDeleteCollaborator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeleteFile
     *
     * Delete a file in a repository.
     *
     */
    public function testRepoDeleteFile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeleteGitHook
     *
     * Delete a Git hook in a repository.
     *
     */
    public function testRepoDeleteGitHook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeleteHook
     *
     * Delete a hook in a repository.
     *
     */
    public function testRepoDeleteHook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeleteKey
     *
     * Delete a key from a repository.
     *
     */
    public function testRepoDeleteKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeletePullReview
     *
     * Delete a specific review from a pull request.
     *
     */
    public function testRepoDeletePullReview()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeletePullReviewRequests
     *
     * cancel review requests for a pull request.
     *
     */
    public function testRepoDeletePullReviewRequests()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeleteRelease
     *
     * Delete a release.
     *
     */
    public function testRepoDeleteRelease()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeleteReleaseAttachment
     *
     * Delete a release attachment.
     *
     */
    public function testRepoDeleteReleaseAttachment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeleteReleaseByTag
     *
     * Delete a release by tag name.
     *
     */
    public function testRepoDeleteReleaseByTag()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeleteTag
     *
     * Delete a repository's tag by name.
     *
     */
    public function testRepoDeleteTag()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeleteTeam
     *
     * Delete a team from a repository.
     *
     */
    public function testRepoDeleteTeam()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeleteTopic
     *
     * Delete a topic from a repository.
     *
     */
    public function testRepoDeleteTopic()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDeleteWikiPage
     *
     * Delete a wiki page.
     *
     */
    public function testRepoDeleteWikiPage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDismissPullReview
     *
     * Dismiss a review for a pull request.
     *
     */
    public function testRepoDismissPullReview()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDownloadCommitDiffOrPatch
     *
     * Get a commit's diff or patch.
     *
     */
    public function testRepoDownloadCommitDiffOrPatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoDownloadPullDiffOrPatch
     *
     * Get a pull request diff or patch.
     *
     */
    public function testRepoDownloadPullDiffOrPatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoEdit
     *
     * Edit a repository's properties. Only fields that are set will be changed..
     *
     */
    public function testRepoEdit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoEditBranchProtection
     *
     * Edit a branch protections for a repository. Only fields that are set will be changed.
     *
     */
    public function testRepoEditBranchProtection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoEditGitHook
     *
     * Edit a Git hook in a repository.
     *
     */
    public function testRepoEditGitHook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoEditHook
     *
     * Edit a hook in a repository.
     *
     */
    public function testRepoEditHook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoEditPullRequest
     *
     * Update a pull request. If using deadline only the date will be taken into account, and time of day ignored..
     *
     */
    public function testRepoEditPullRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoEditRelease
     *
     * Update a release.
     *
     */
    public function testRepoEditRelease()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoEditReleaseAttachment
     *
     * Edit a release attachment.
     *
     */
    public function testRepoEditReleaseAttachment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoEditWikiPage
     *
     * Edit a wiki page.
     *
     */
    public function testRepoEditWikiPage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGet
     *
     * Get a repository.
     *
     */
    public function testRepoGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetAllCommits
     *
     * Get a list of all commits from a repository.
     *
     */
    public function testRepoGetAllCommits()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetArchive
     *
     * Get an archive of a repository.
     *
     */
    public function testRepoGetArchive()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetAssignees
     *
     * Return all users that have write access and can be assigned to issues.
     *
     */
    public function testRepoGetAssignees()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetBranch
     *
     * Retrieve a specific branch from a repository, including its effective branch protection.
     *
     */
    public function testRepoGetBranch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetBranchProtection
     *
     * Get a specific branch protection for the repository.
     *
     */
    public function testRepoGetBranchProtection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetByID
     *
     * Get a repository by id.
     *
     */
    public function testRepoGetByID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetCombinedStatusByRef
     *
     * Get a commit's combined status, by branch/tag/commit reference.
     *
     */
    public function testRepoGetCombinedStatusByRef()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetContents
     *
     * Gets the metadata and contents (if a file) of an entry in a repository, or a list of entries if a dir.
     *
     */
    public function testRepoGetContents()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetContentsList
     *
     * Gets the metadata of all the entries of the root dir.
     *
     */
    public function testRepoGetContentsList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetEditorConfig
     *
     * Get the EditorConfig definitions of a file in a repository.
     *
     */
    public function testRepoGetEditorConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetGitHook
     *
     * Get a Git hook.
     *
     */
    public function testRepoGetGitHook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetHook
     *
     * Get a hook.
     *
     */
    public function testRepoGetHook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetIssueTemplates
     *
     * Get available issue templates for a repository.
     *
     */
    public function testRepoGetIssueTemplates()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetKey
     *
     * Get a repository's key by id.
     *
     */
    public function testRepoGetKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetLanguages
     *
     * Get languages and number of bytes of code written.
     *
     */
    public function testRepoGetLanguages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetNote
     *
     * Get a note corresponding to a single commit from a repository.
     *
     */
    public function testRepoGetNote()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetPullRequest
     *
     * Get a pull request.
     *
     */
    public function testRepoGetPullRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetPullRequestCommits
     *
     * Get commits for a pull request.
     *
     */
    public function testRepoGetPullRequestCommits()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetPullReview
     *
     * Get a specific review for a pull request.
     *
     */
    public function testRepoGetPullReview()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetPullReviewComments
     *
     * Get a specific review for a pull request.
     *
     */
    public function testRepoGetPullReviewComments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetRawFile
     *
     * Get a file from a repository.
     *
     */
    public function testRepoGetRawFile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetRelease
     *
     * Get a release.
     *
     */
    public function testRepoGetRelease()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetReleaseAttachment
     *
     * Get a release attachment.
     *
     */
    public function testRepoGetReleaseAttachment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetReleaseByTag
     *
     * Get a release by tag name.
     *
     */
    public function testRepoGetReleaseByTag()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetReviewers
     *
     * Return all users that can be requested to review in this repo.
     *
     */
    public function testRepoGetReviewers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetSingleCommit
     *
     * Get a single commit from a repository.
     *
     */
    public function testRepoGetSingleCommit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetTag
     *
     * Get the tag of a repository by tag name.
     *
     */
    public function testRepoGetTag()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetWikiPage
     *
     * Get a wiki page.
     *
     */
    public function testRepoGetWikiPage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetWikiPageRevisions
     *
     * Get revisions of a wiki page.
     *
     */
    public function testRepoGetWikiPageRevisions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoGetWikiPages
     *
     * Get all wiki pages.
     *
     */
    public function testRepoGetWikiPages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListAllGitRefs
     *
     * Get specified ref or filtered repository's refs.
     *
     */
    public function testRepoListAllGitRefs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListBranchProtection
     *
     * List branch protections for a repository.
     *
     */
    public function testRepoListBranchProtection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListBranches
     *
     * List a repository's branches.
     *
     */
    public function testRepoListBranches()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListCollaborators
     *
     * List a repository's collaborators.
     *
     */
    public function testRepoListCollaborators()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListGitHooks
     *
     * List the Git hooks in a repository.
     *
     */
    public function testRepoListGitHooks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListGitRefs
     *
     * Get specified ref or filtered repository's refs.
     *
     */
    public function testRepoListGitRefs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListHooks
     *
     * List the hooks in a repository.
     *
     */
    public function testRepoListHooks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListKeys
     *
     * List a repository's keys.
     *
     */
    public function testRepoListKeys()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListPullRequests
     *
     * List a repo's pull requests.
     *
     */
    public function testRepoListPullRequests()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListPullReviews
     *
     * List all reviews for a pull request.
     *
     */
    public function testRepoListPullReviews()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListReleaseAttachments
     *
     * List release's attachments.
     *
     */
    public function testRepoListReleaseAttachments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListReleases
     *
     * List a repo's releases.
     *
     */
    public function testRepoListReleases()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListStargazers
     *
     * List a repo's stargazers.
     *
     */
    public function testRepoListStargazers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListStatuses
     *
     * Get a commit's statuses.
     *
     */
    public function testRepoListStatuses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListStatusesByRef
     *
     * Get a commit's statuses, by branch/tag/commit reference.
     *
     */
    public function testRepoListStatusesByRef()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListSubscribers
     *
     * List a repo's watchers.
     *
     */
    public function testRepoListSubscribers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListTags
     *
     * List a repository's tags.
     *
     */
    public function testRepoListTags()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListTeams
     *
     * List a repository's teams.
     *
     */
    public function testRepoListTeams()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoListTopics
     *
     * Get list of topics that a repository has.
     *
     */
    public function testRepoListTopics()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoMergePullRequest
     *
     * Merge a pull request.
     *
     */
    public function testRepoMergePullRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoMigrate
     *
     * Migrate a remote git repository.
     *
     */
    public function testRepoMigrate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoMirrorSync
     *
     * Sync a mirrored repository.
     *
     */
    public function testRepoMirrorSync()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoPullRequestIsMerged
     *
     * Check if a pull request has been merged.
     *
     */
    public function testRepoPullRequestIsMerged()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoSearch
     *
     * Search for repositories.
     *
     */
    public function testRepoSearch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoSigningKey
     *
     * Get signing-key.gpg for given repository.
     *
     */
    public function testRepoSigningKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoSubmitPullReview
     *
     * Submit a pending review to an pull request.
     *
     */
    public function testRepoSubmitPullReview()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoTestHook
     *
     * Test a push webhook.
     *
     */
    public function testRepoTestHook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoTrackedTimes
     *
     * List a repo's tracked times.
     *
     */
    public function testRepoTrackedTimes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoTransfer
     *
     * Transfer a repo ownership.
     *
     */
    public function testRepoTransfer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoUnDismissPullReview
     *
     * Cancel to dismiss a review for a pull request.
     *
     */
    public function testRepoUnDismissPullReview()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoUpdateFile
     *
     * Update a file in a repository.
     *
     */
    public function testRepoUpdateFile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoUpdatePullRequest
     *
     * Merge PR's baseBranch into headBranch.
     *
     */
    public function testRepoUpdatePullRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for repoUpdateTopics
     *
     * Replace list of topics for a repository.
     *
     */
    public function testRepoUpdateTopics()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for topicSearch
     *
     * search topics via keyword.
     *
     */
    public function testTopicSearch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentCheckSubscription
     *
     * Check if the current user is watching a repo.
     *
     */
    public function testUserCurrentCheckSubscription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentDeleteSubscription
     *
     * Unwatch a repo.
     *
     */
    public function testUserCurrentDeleteSubscription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentPutSubscription
     *
     * Watch a repo.
     *
     */
    public function testUserCurrentPutSubscription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userTrackedTimes
     *
     * List a user's tracked times in a repo.
     *
     */
    public function testUserTrackedTimes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
