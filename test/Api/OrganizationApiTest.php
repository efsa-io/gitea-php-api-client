<?php
/**
 * OrganizationApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  \Efsa\Client\Gitea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Gitea API.
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.17.0+dev-334-gf36701c70
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace \Efsa\Client\Gitea\Test\Api;

use \\Efsa\Client\Gitea\Configuration;
use \\Efsa\Client\Gitea\ApiException;
use \\Efsa\Client\Gitea\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OrganizationApiTest Class Doc Comment
 *
 * @category Class
 * @package  \Efsa\Client\Gitea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrganizationApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createOrgRepo
     *
     * Create a repository in an organization.
     *
     */
    public function testCreateOrgRepo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createOrgRepoDeprecated
     *
     * Create a repository in an organization.
     *
     */
    public function testCreateOrgRepoDeprecated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgAddTeamMember
     *
     * Add a team member.
     *
     */
    public function testOrgAddTeamMember()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgAddTeamRepository
     *
     * Add a repository to a team.
     *
     */
    public function testOrgAddTeamRepository()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgConcealMember
     *
     * Conceal a user's membership.
     *
     */
    public function testOrgConcealMember()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgCreate
     *
     * Create an organization.
     *
     */
    public function testOrgCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgCreateHook
     *
     * Create a hook.
     *
     */
    public function testOrgCreateHook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgCreateLabel
     *
     * Create a label for an organization.
     *
     */
    public function testOrgCreateLabel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgCreateTeam
     *
     * Create a team.
     *
     */
    public function testOrgCreateTeam()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgDelete
     *
     * Delete an organization.
     *
     */
    public function testOrgDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgDeleteHook
     *
     * Delete a hook.
     *
     */
    public function testOrgDeleteHook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgDeleteLabel
     *
     * Delete a label.
     *
     */
    public function testOrgDeleteLabel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgDeleteMember
     *
     * Remove a member from an organization.
     *
     */
    public function testOrgDeleteMember()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgDeleteTeam
     *
     * Delete a team.
     *
     */
    public function testOrgDeleteTeam()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgEdit
     *
     * Edit an organization.
     *
     */
    public function testOrgEdit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgEditHook
     *
     * Update a hook.
     *
     */
    public function testOrgEditHook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgEditLabel
     *
     * Update a label.
     *
     */
    public function testOrgEditLabel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgEditTeam
     *
     * Edit a team.
     *
     */
    public function testOrgEditTeam()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgGet
     *
     * Get an organization.
     *
     */
    public function testOrgGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgGetAll
     *
     * Get list of organizations.
     *
     */
    public function testOrgGetAll()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgGetHook
     *
     * Get a hook.
     *
     */
    public function testOrgGetHook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgGetLabel
     *
     * Get a single label.
     *
     */
    public function testOrgGetLabel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgGetTeam
     *
     * Get a team.
     *
     */
    public function testOrgGetTeam()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgGetUserPermissions
     *
     * Get user permissions in organization.
     *
     */
    public function testOrgGetUserPermissions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgIsMember
     *
     * Check if a user is a member of an organization.
     *
     */
    public function testOrgIsMember()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgIsPublicMember
     *
     * Check if a user is a public member of an organization.
     *
     */
    public function testOrgIsPublicMember()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgListCurrentUserOrgs
     *
     * List the current user's organizations.
     *
     */
    public function testOrgListCurrentUserOrgs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgListHooks
     *
     * List an organization's webhooks.
     *
     */
    public function testOrgListHooks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgListLabels
     *
     * List an organization's labels.
     *
     */
    public function testOrgListLabels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgListMembers
     *
     * List an organization's members.
     *
     */
    public function testOrgListMembers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgListPublicMembers
     *
     * List an organization's public members.
     *
     */
    public function testOrgListPublicMembers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgListRepos
     *
     * List an organization's repos.
     *
     */
    public function testOrgListRepos()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgListTeamMember
     *
     * List a particular member of team.
     *
     */
    public function testOrgListTeamMember()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgListTeamMembers
     *
     * List a team's members.
     *
     */
    public function testOrgListTeamMembers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgListTeamRepos
     *
     * List a team's repos.
     *
     */
    public function testOrgListTeamRepos()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgListTeams
     *
     * List an organization's teams.
     *
     */
    public function testOrgListTeams()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgListUserOrgs
     *
     * List a user's organizations.
     *
     */
    public function testOrgListUserOrgs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgPublicizeMember
     *
     * Publicize a user's membership.
     *
     */
    public function testOrgPublicizeMember()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgRemoveTeamMember
     *
     * Remove a team member.
     *
     */
    public function testOrgRemoveTeamMember()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orgRemoveTeamRepository
     *
     * Remove a repository from a team.
     *
     */
    public function testOrgRemoveTeamRepository()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for teamSearch
     *
     * Search for teams within an organization.
     *
     */
    public function testTeamSearch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
