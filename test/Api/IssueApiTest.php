<?php
/**
 * IssueApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  \Efsa\Client\Gitea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Gitea API.
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.17.0+dev-334-gf36701c70
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace \Efsa\Client\Gitea\Test\Api;

use \\Efsa\Client\Gitea\Configuration;
use \\Efsa\Client\Gitea\ApiException;
use \\Efsa\Client\Gitea\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * IssueApiTest Class Doc Comment
 *
 * @category Class
 * @package  \Efsa\Client\Gitea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class IssueApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for issueAddLabel
     *
     * Add a label to an issue.
     *
     */
    public function testIssueAddLabel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueAddSubscription
     *
     * Subscribe user to issue.
     *
     */
    public function testIssueAddSubscription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueAddTime
     *
     * Add tracked time to a issue.
     *
     */
    public function testIssueAddTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueCheckSubscription
     *
     * Check if user is subscribed to an issue.
     *
     */
    public function testIssueCheckSubscription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueClearLabels
     *
     * Remove all labels from an issue.
     *
     */
    public function testIssueClearLabels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueCreateComment
     *
     * Add a comment to an issue.
     *
     */
    public function testIssueCreateComment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueCreateIssue
     *
     * Create an issue. If using deadline only the date will be taken into account, and time of day ignored..
     *
     */
    public function testIssueCreateIssue()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueCreateLabel
     *
     * Create a label.
     *
     */
    public function testIssueCreateLabel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueCreateMilestone
     *
     * Create a milestone.
     *
     */
    public function testIssueCreateMilestone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueDelete
     *
     * Delete an issue.
     *
     */
    public function testIssueDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueDeleteComment
     *
     * Delete a comment.
     *
     */
    public function testIssueDeleteComment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueDeleteCommentDeprecated
     *
     * Delete a comment.
     *
     */
    public function testIssueDeleteCommentDeprecated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueDeleteCommentReaction
     *
     * Remove a reaction from a comment of an issue.
     *
     */
    public function testIssueDeleteCommentReaction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueDeleteIssueReaction
     *
     * Remove a reaction from an issue.
     *
     */
    public function testIssueDeleteIssueReaction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueDeleteLabel
     *
     * Delete a label.
     *
     */
    public function testIssueDeleteLabel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueDeleteMilestone
     *
     * Delete a milestone.
     *
     */
    public function testIssueDeleteMilestone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueDeleteStopWatch
     *
     * Delete an issue's existing stopwatch..
     *
     */
    public function testIssueDeleteStopWatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueDeleteSubscription
     *
     * Unsubscribe user from issue.
     *
     */
    public function testIssueDeleteSubscription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueDeleteTime
     *
     * Delete specific tracked time.
     *
     */
    public function testIssueDeleteTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueEditComment
     *
     * Edit a comment.
     *
     */
    public function testIssueEditComment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueEditCommentDeprecated
     *
     * Edit a comment.
     *
     */
    public function testIssueEditCommentDeprecated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueEditIssue
     *
     * Edit an issue. If using deadline only the date will be taken into account, and time of day ignored..
     *
     */
    public function testIssueEditIssue()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueEditIssueDeadline
     *
     * Set an issue deadline. If set to null, the deadline is deleted. If using deadline only the date will be taken into account, and time of day ignored..
     *
     */
    public function testIssueEditIssueDeadline()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueEditLabel
     *
     * Update a label.
     *
     */
    public function testIssueEditLabel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueEditMilestone
     *
     * Update a milestone.
     *
     */
    public function testIssueEditMilestone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueGetComment
     *
     * Get a comment.
     *
     */
    public function testIssueGetComment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueGetCommentReactions
     *
     * Get a list of reactions from a comment of an issue.
     *
     */
    public function testIssueGetCommentReactions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueGetComments
     *
     * List all comments on an issue.
     *
     */
    public function testIssueGetComments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueGetCommentsAndTimeline
     *
     * List all comments and events on an issue.
     *
     */
    public function testIssueGetCommentsAndTimeline()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueGetIssue
     *
     * Get an issue.
     *
     */
    public function testIssueGetIssue()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueGetIssueReactions
     *
     * Get a list reactions of an issue.
     *
     */
    public function testIssueGetIssueReactions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueGetLabel
     *
     * Get a single label.
     *
     */
    public function testIssueGetLabel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueGetLabels
     *
     * Get an issue's labels.
     *
     */
    public function testIssueGetLabels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueGetMilestone
     *
     * Get a milestone.
     *
     */
    public function testIssueGetMilestone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueGetMilestonesList
     *
     * Get all of a repository's opened milestones.
     *
     */
    public function testIssueGetMilestonesList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueGetRepoComments
     *
     * List all comments in a repository.
     *
     */
    public function testIssueGetRepoComments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueListIssues
     *
     * List a repository's issues.
     *
     */
    public function testIssueListIssues()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueListLabels
     *
     * Get all of a repository's labels.
     *
     */
    public function testIssueListLabels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issuePostCommentReaction
     *
     * Add a reaction to a comment of an issue.
     *
     */
    public function testIssuePostCommentReaction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issuePostIssueReaction
     *
     * Add a reaction to an issue.
     *
     */
    public function testIssuePostIssueReaction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueRemoveLabel
     *
     * Remove a label from an issue.
     *
     */
    public function testIssueRemoveLabel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueReplaceLabels
     *
     * Replace an issue's labels.
     *
     */
    public function testIssueReplaceLabels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueResetTime
     *
     * Reset a tracked time of an issue.
     *
     */
    public function testIssueResetTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueSearchIssues
     *
     * Search for issues across the repositories that the user has access to.
     *
     */
    public function testIssueSearchIssues()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueStartStopWatch
     *
     * Start stopwatch on an issue..
     *
     */
    public function testIssueStartStopWatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueStopStopWatch
     *
     * Stop an issue's existing stopwatch..
     *
     */
    public function testIssueStopStopWatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueSubscriptions
     *
     * Get users who subscribed on an issue..
     *
     */
    public function testIssueSubscriptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for issueTrackedTimes
     *
     * List an issue's tracked times.
     *
     */
    public function testIssueTrackedTimes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
