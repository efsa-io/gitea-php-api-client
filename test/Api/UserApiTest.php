<?php
/**
 * UserApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  Efsa\Client\Gitea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Gitea API.
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.17.0+dev-334-gf36701c70
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Efsa\Client\Gitea\Test\Api;

use \Efsa\Client\Gitea\Configuration;
use \Efsa\Client\Gitea\ApiException;
use \Efsa\Client\Gitea\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * UserApiTest Class Doc Comment
 *
 * @category Class
 * @package  Efsa\Client\Gitea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class UserApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createCurrentUserRepo
     *
     * Create a repository.
     *
     */
    public function testCreateCurrentUserRepo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getUserSettings
     *
     * Get user settings.
     *
     */
    public function testGetUserSettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getVerificationToken
     *
     * Get a Token to verify.
     *
     */
    public function testGetVerificationToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateUserSettings
     *
     * Update user settings.
     *
     */
    public function testUpdateUserSettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userAddEmail
     *
     * Add email addresses.
     *
     */
    public function testUserAddEmail()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCheckFollowing
     *
     * Check if one user is following another user.
     *
     */
    public function testUserCheckFollowing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCreateOAuth2Application
     *
     * creates a new OAuth2 application.
     *
     */
    public function testUserCreateOAuth2Application()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCreateToken
     *
     * Create an access token.
     *
     */
    public function testUserCreateToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentCheckFollowing
     *
     * Check whether a user is followed by the authenticated user.
     *
     */
    public function testUserCurrentCheckFollowing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentCheckStarring
     *
     * Whether the authenticated is starring the repo.
     *
     */
    public function testUserCurrentCheckStarring()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentDeleteFollow
     *
     * Unfollow a user.
     *
     */
    public function testUserCurrentDeleteFollow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentDeleteGPGKey
     *
     * Remove a GPG key.
     *
     */
    public function testUserCurrentDeleteGPGKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentDeleteKey
     *
     * Delete a public key.
     *
     */
    public function testUserCurrentDeleteKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentDeleteStar
     *
     * Unstar the given repo.
     *
     */
    public function testUserCurrentDeleteStar()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentGetGPGKey
     *
     * Get a GPG key.
     *
     */
    public function testUserCurrentGetGPGKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentGetKey
     *
     * Get a public key.
     *
     */
    public function testUserCurrentGetKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentListFollowers
     *
     * List the authenticated user's followers.
     *
     */
    public function testUserCurrentListFollowers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentListFollowing
     *
     * List the users that the authenticated user is following.
     *
     */
    public function testUserCurrentListFollowing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentListGPGKeys
     *
     * List the authenticated user's GPG keys.
     *
     */
    public function testUserCurrentListGPGKeys()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentListKeys
     *
     * List the authenticated user's public keys.
     *
     */
    public function testUserCurrentListKeys()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentListRepos
     *
     * List the repos that the authenticated user owns.
     *
     */
    public function testUserCurrentListRepos()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentListStarred
     *
     * The repos that the authenticated user has starred.
     *
     */
    public function testUserCurrentListStarred()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentListSubscriptions
     *
     * List repositories watched by the authenticated user.
     *
     */
    public function testUserCurrentListSubscriptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentPostGPGKey
     *
     * Create a GPG key.
     *
     */
    public function testUserCurrentPostGPGKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentPostKey
     *
     * Create a public key.
     *
     */
    public function testUserCurrentPostKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentPutFollow
     *
     * Follow a user.
     *
     */
    public function testUserCurrentPutFollow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentPutStar
     *
     * Star the given repo.
     *
     */
    public function testUserCurrentPutStar()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userCurrentTrackedTimes
     *
     * List the current user's tracked times.
     *
     */
    public function testUserCurrentTrackedTimes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userDeleteAccessToken
     *
     * delete an access token.
     *
     */
    public function testUserDeleteAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userDeleteEmail
     *
     * Delete email addresses.
     *
     */
    public function testUserDeleteEmail()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userDeleteOAuth2Application
     *
     * delete an OAuth2 Application.
     *
     */
    public function testUserDeleteOAuth2Application()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userGet
     *
     * Get a user.
     *
     */
    public function testUserGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userGetCurrent
     *
     * Get the authenticated user.
     *
     */
    public function testUserGetCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userGetHeatmapData
     *
     * Get a user's heatmap.
     *
     */
    public function testUserGetHeatmapData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userGetOAuth2Application
     *
     * get an OAuth2 Application.
     *
     */
    public function testUserGetOAuth2Application()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userGetOauth2Application
     *
     * List the authenticated user's oauth2 applications.
     *
     */
    public function testUserGetOauth2Application()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userGetStopWatches
     *
     * Get list of all existing stopwatches.
     *
     */
    public function testUserGetStopWatches()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userGetTokens
     *
     * List the authenticated user's access tokens.
     *
     */
    public function testUserGetTokens()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userListEmails
     *
     * List the authenticated user's email addresses.
     *
     */
    public function testUserListEmails()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userListFollowers
     *
     * List the given user's followers.
     *
     */
    public function testUserListFollowers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userListFollowing
     *
     * List the users that the given user is following.
     *
     */
    public function testUserListFollowing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userListGPGKeys
     *
     * List the given user's GPG keys.
     *
     */
    public function testUserListGPGKeys()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userListKeys
     *
     * List the given user's public keys.
     *
     */
    public function testUserListKeys()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userListRepos
     *
     * List the repos owned by the given user.
     *
     */
    public function testUserListRepos()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userListStarred
     *
     * The repos that the given user has starred.
     *
     */
    public function testUserListStarred()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userListSubscriptions
     *
     * List the repositories watched by a user.
     *
     */
    public function testUserListSubscriptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userListTeams
     *
     * List all the teams a user belongs to.
     *
     */
    public function testUserListTeams()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userSearch
     *
     * Search for users.
     *
     */
    public function testUserSearch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userUpdateOAuth2Application
     *
     * update an OAuth2 Application, this includes regenerating the client secret.
     *
     */
    public function testUserUpdateOAuth2Application()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userVerifyGPGKey
     *
     * Verify a GPG key.
     *
     */
    public function testUserVerifyGPGKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
